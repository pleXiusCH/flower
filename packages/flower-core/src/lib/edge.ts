
import * as O from 'fp-ts/Option';

// -----------------------------------------------------------------------------
// model
// -----------------------------------------------------------------------------

export type OriginIdentifier<Id> = {
  type: 'Graph' | 'Node' | 'Port'
  id: Id
}

export type Connection = {
  from: string
  to: string
}

export interface Edge {
  readonly _brand: unique symbol
  readonly from: string,
  readonly to: string,
}

export {
  Edge as default,
};

// -----------------------------------------------------------------------------
// constructors
// -----------------------------------------------------------------------------

export const empty = 
  (): Edge =>
    unsafeMkEdge({
      from: '',
      to: ''
    });

// -----------------------------------------------------------------------------
// combinators
// -----------------------------------------------------------------------------



// -----------------------------------------------------------------------------
// utils
// -----------------------------------------------------------------------------



// -----------------------------------------------------------------------------
// destructors
// -----------------------------------------------------------------------------



// -----------------------------------------------------------------------------
// internal
// -----------------------------------------------------------------------------

const unsafeMkEdge = 
  (edgeData: Omit<Edge, '_brand'>): Edge => 
    edgeData as Edge

